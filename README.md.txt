# Intelligent Motorcycle Fault Detection Using ML-Based Acoustic Analysis

This project focuses on developing an intelligent system to detect potential faults in motorcycles using audio signals. By analyzing sound patterns generated by motorcycles in various fault conditions, we aim to classify the type of fault using machine learning techniques.

## 🔍 Project Overview

Motorcycles often exhibit specific acoustic signatures when faulty (e.g., engine knock, brake issue, silence issue, chain issues). This project captures and processes audio samples from motorcycles to:

- Preprocess and clean the raw audio
- Extract meaningful audio features (MFCC, Chroma, etc.)
- Train machine learning models to classify the faults
- Evaluate and deploy the model for real-time predictions

---

## 💡 Motivation

Manual diagnosis of motorcycle faults based on sound requires expertise and is not scalable. An AI-based solution can:

- Help mechanics with fast pre-diagnostics
- Reduce maintenance time
- Minimize risk of missing early-stage faults
- Enable predictive maintenance

---

## 🧠 Technologies Used

- **Languages:** Python, NumPy, Pandas
- **Audio Processing:** LibROSA, SciPy, Soundfile
- **Visualization:** Matplotlib, Seaborn
- **Machine Learning Models:**  
  - Random Forest  
  - Support Vector Machine (SVM)  
  - K-Nearest Neighbors (KNN)
- **Model Evaluation:** Accuracy, Confusion Matrix
- **Jupyter Notebook** for experimentation

---

## 📁 Dataset

- Audio recordings were collected for various engine states:
  - **Normal condition**
  - **Loose Chain**
  - **Engine Misfire**
  - **Brake Issues**
- Preprocessed using noise reduction and resampling.
- Feature extraction was performed using MFCC, Chroma STFT, Spectral Contrast, and Zero Crossing Rate.

---

## 📊 Model Results

| Model            | Accuracy |
|------------------|----------|
| Random Forest    | 93.5%    |
| SVM              | 90.2%    |
| KNN              | 88.7%    |

(Note: Accuracy may vary based on updated datasets.)

---

## 🔄 Workflow

```text
[Audio Data Collection] → [Preprocessing] → [Feature Extraction] → [Model Training] → [Evaluation] → [Prediction]

🚀 How to Run the Project
1. Clone the repository:
git clone https://github.com/yourusername/motorcycle-fault-detection.git
cd motorcycle-fault-detection

2. Install dependencies:
pip install -r requirements.txt

3. Run the Jupyter Notebook:
jupyter notebook

4. Open fault_detection.ipynb and follow the steps.

📌 Future Scope
Integrate with a mobile app for real-time recording and prediction
Improve dataset by collecting more fault types and samples
Use deep learning (CNN/LSTM) for better accuracy
Deploy the system on edge devices using TinyML

🤝 Contributing
Pull requests are welcome. For major changes, open an issue first to discuss what you would like to change.

📜 License
This project is for academic use only. Commercial use is not permitted without permission.

🙋‍♂️ Author
Mohammad Kazim
Aryan Gupta
Faiz Maqsood
Electronics & Communication Engineering
Bharati Vidyapeeth Deemed University, Pune
📧 [mohammadkazim71@gmail.com]